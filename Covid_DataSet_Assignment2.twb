<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='owid-covid-data - 2ndCopy (owid-covid-data - 2ndCopy)' inline='true' name='federated.11nvgln0yx58vn1fatmnt1rraz1b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='World_Covid_Data_Set' name='excel-direct.1lku31i0gcg3ky17mudj31dxesvg'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Rabina Padhy/Desktop/Visualisation/Assignment 2/New folder/Tableau/World_Covid_Data_Set.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1lku31i0gcg3ky17mudj31dxesvg' name='owid-covid-data - 2ndCopy' table='[&apos;owid-covid-data - 2ndCopy$&apos;]' type='table'>
          <columns gridOrigin='A1:P13468:no:A1:P13468:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='total_cases' ordinal='3' />
            <column datatype='integer' name='new_cases' ordinal='4' />
            <column datatype='integer' name='total_deaths' ordinal='5' />
            <column datatype='integer' name='new_deaths' ordinal='6' />
            <column datatype='real' name='total_cases_per_million' ordinal='7' />
            <column datatype='real' name='new_cases_per_million' ordinal='8' />
            <column datatype='real' name='total_deaths_per_million' ordinal='9' />
            <column datatype='real' name='new_deaths_per_million' ordinal='10' />
            <column datatype='integer' name='total_tests' ordinal='11' />
            <column datatype='integer' name='new_tests' ordinal='12' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='13' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='14' />
            <column datatype='string' name='tests_units' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid-covid-data - 2ndCopy]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid-covid-data - 2ndCopy]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid-covid-data - 2ndCopy]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid-covid-data - 2ndCopy]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid-covid-data - 2ndCopy]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid-covid-data - 2ndCopy]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid-covid-data - 2ndCopy]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid-covid-data - 2ndCopy]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid-covid-data - 2ndCopy]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data - 2ndCopy]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data - 2ndCopy]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid-covid-data - 2ndCopy]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid-covid-data - 2ndCopy]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data - 2ndCopy]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data - 2ndCopy]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid-covid-data - 2ndCopy]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid-covid-data - 2ndCopy]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P13468:no:A1:P13468:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Week No' datatype='integer' name='[Calculation_745908739735781376]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='WEEK([date])' />
      </column>
      <column caption='Calculation1' datatype='integer' name='[Calculation_745908739737182211]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='YEAR([date])' />
      </column>
      <column caption='Year' datatype='integer' name='[Calculation_745908739737477124]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='YEAR([date])' />
      </column>
      <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column-instance column='[new_deaths]' derivation='Sum' forecast-column-base='[sum:new_deaths:qk]' forecast-column-type='forecast-value' name='[fVal:sum:new_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_per_million]' derivation='Sum' name='[sum:new_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_per_million]' derivation='Sum' name='[sum:new_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Week No,Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_745908739735781376]' />
          <groupfilter function='level-members' level='[Calculation_745908739737477124]' />
        </groupfilter>
      </group>
      <group caption='Year &amp; Week No' delimiter='- Week' name='[Week No &amp; Year (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_745908739737477124]' />
          <groupfilter function='level-members' level='[Calculation_745908739735781376]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.348548' measure-ordering='alphabetic' measure-percentage='0.651452' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.11nvgln0yx58vn1fatmnt1rraz1b].[avg:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.11nvgln0yx58vn1fatmnt1rraz1b].[cnt:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.11nvgln0yx58vn1fatmnt1rraz1b].[med:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.11nvgln0yx58vn1fatmnt1rraz1b].[min:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.11nvgln0yx58vn1fatmnt1rraz1b].[pcto:sum:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_deaths:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.11nvgln0yx58vn1fatmnt1rraz1b].[fVal:sum:new_deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.11nvgln0yx58vn1fatmnt1rraz1b].[fVal:sum:new_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_deaths_per_million:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Week No &amp; Year (Combined)]' type='palette'>
            <map to='#499894'>
              <bucket>(2020,8)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(2020,11)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(2020,4)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(2020,16)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(2020,12)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(2020,9)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(2020,5)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(2020,18)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(2020,1)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(2020,14)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(2020,13)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(2020,2)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(2020,7)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(2020,3)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(2020,17)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(2020,15)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(2020,6)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(2019,53)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(2020,10)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;[federated.11nvgln0yx58vn1fatmnt1rraz1b].[fVal:sum:new_cases_per_million:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;[federated.11nvgln0yx58vn1fatmnt1rraz1b].[fVal:sum:new_cases:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;[federated.11nvgln0yx58vn1fatmnt1rraz1b].[fVal:sum:new_deaths:qk]&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='DashBoard' type='sheet' worksheet='World Map Total Case Count' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='DashBoard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Line Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='18'>New Cases and Death Case Forecasting with their Trends Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data - 2ndCopy (owid-covid-data - 2ndCopy)' name='federated.11nvgln0yx58vn1fatmnt1rraz1b' />
          </datasources>
          <datasource-dependencies datasource='federated.11nvgln0yx58vn1fatmnt1rraz1b'>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[new_cases]' derivation='Sum' forecast-column-base='[sum:new_cases:qk]' forecast-column-type='forecast-value' name='[fVal:sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' forecast-column-base='[sum:new_deaths:qk]' forecast-column-type='forecast-value' name='[fVal:sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Indonesia&quot;' />
              <groupfilter from='&quot;Iran&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[fVal:sum:new_deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[fVal:sum:new_deaths:qk]' scope='rows' value='Death Cases Confirmed' />
            <format attr='title' class='0' field='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[fVal:sum:new_cases:qk]' scope='rows' value='New Cases Registered' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#1b1b1b' />
            <format attr='color' data-class='subtotal' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='3' />
            <format attr='stroke-color' scope='cols' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[:Measure Names]' />
              <color column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[fVal:sum:new_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[:Measure Names]' />
              <color column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[fVal:sum:new_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[:Measure Names]' />
              <color column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.11nvgln0yx58vn1fatmnt1rraz1b].[fVal:sum:new_cases:qk] + [federated.11nvgln0yx58vn1fatmnt1rraz1b].[fVal:sum:new_deaths:qk])</rows>
        <cols>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[twk:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='99.000000' enabled='true' fill-type='fill-missing' ignore-last='0' model-type='auto-season' range-periods='Week-Trunc' range-size='23' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{B45413E3-3FD7-4A74-ADE0-C0A0D046BF34}' />
    </worksheet>
    <worksheet name='New cases Per Week'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#aa007f'>New Cases Registered Per Week</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data - 2ndCopy (owid-covid-data - 2ndCopy)' name='federated.11nvgln0yx58vn1fatmnt1rraz1b' />
          </datasources>
          <datasource-dependencies datasource='federated.11nvgln0yx58vn1fatmnt1rraz1b'>
            <column caption='Week No' datatype='integer' name='[Calculation_745908739735781376]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='WEEK([date])' />
            </column>
            <column caption='Year' datatype='integer' name='[Calculation_745908739737477124]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='YEAR([date])' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[Calculation_745908739737477124]' />
                <groupfilter function='level-members' level='[Calculation_745908739735781376]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='18' />
                  <groupfilter function='member' level='[Calculation_745908739737477124]' member='2020' />
                </groupfilter>
                <order>
                  <hierarchy name='[Calculation_745908739737477124]' />
                  <hierarchy name='[Calculation_745908739735781376]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Indonesia&quot;' />
              <groupfilter from='&quot;Iran&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]</column>
            <column>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_cases:qk]' scope='rows' value='New Case Registered' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]' value='-90' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#edc948' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#1e2be5' />
            <format attr='stroke-size' id='refline1' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]' />
              <text column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_cases:qk]' />
            </encodings>
            <reference-line axis-column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_cases:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_cases:qk]' z-order='1' />
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='bottom' />
                <format attr='text-orientation' value='-90' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_cases:qk]</rows>
        <cols>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]</cols>
      </table>
      <simple-id uuid='{E3C50A6D-9A68-445F-A118-16B2C87B61AE}' />
    </worksheet>
    <worksheet name='New&amp;Death Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>New and Death Cases Count</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data - 2ndCopy (owid-covid-data - 2ndCopy)' name='federated.11nvgln0yx58vn1fatmnt1rraz1b' />
          </datasources>
          <datasource-dependencies datasource='federated.11nvgln0yx58vn1fatmnt1rraz1b'>
            <column caption='Week No' datatype='integer' name='[Calculation_745908739735781376]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='WEEK([date])' />
            </column>
            <column caption='Year' datatype='integer' name='[Calculation_745908739737477124]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='YEAR([date])' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[Calculation_745908739737477124]' />
                <groupfilter function='level-members' level='[Calculation_745908739735781376]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='18' />
                  <groupfilter function='member' level='[Calculation_745908739737477124]' member='2020' />
                </groupfilter>
                <order>
                  <hierarchy name='[Calculation_745908739737477124]' />
                  <hierarchy name='[Calculation_745908739735781376]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Indonesia&quot;' />
              <groupfilter from='&quot;Iran&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]</column>
            <column>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_cases:qk]' scope='rows' value='New Cases Registered' />
            <format attr='title' class='0' field='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_deaths:qk]' scope='rows' value='Death Cases Confirmed' />
            <encoding attr='space' class='0' field='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]' value='-90' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#edc948' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='bottom' />
                <format attr='text-orientation' value='-90' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-color' value='#e15759' />
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='bottom' />
                <format attr='text-orientation' value='-90' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-color' value='#e15759' />
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='bottom' />
                <format attr='text-orientation' value='-90' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-color' value='#e15759' />
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_cases:qk] + [federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_deaths:qk])</rows>
        <cols>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]</cols>
      </table>
      <simple-id uuid='{33A5A468-DAED-4EDA-A5A6-D9A2692A9513}' />
    </worksheet>
    <worksheet name='Stacked bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Medium' fontsize='20'>Top 6 Countries Covid Cases Registered</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data - 2ndCopy (owid-covid-data - 2ndCopy)' name='federated.11nvgln0yx58vn1fatmnt1rraz1b' />
          </datasources>
          <datasource-dependencies datasource='federated.11nvgln0yx58vn1fatmnt1rraz1b'>
            <column caption='Week No' datatype='integer' name='[Calculation_745908739735781376]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='WEEK([date])' />
            </column>
            <column caption='Year' datatype='integer' name='[Calculation_745908739737477124]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='YEAR([date])' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Calculation_745908739737477124]' member='2019' />
                <groupfilter function='member' level='[Calculation_745908739735781376]' member='53' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Calculation_745908739737477124]' member='2020' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='1' />
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='2' />
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='3' />
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='4' />
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='5' />
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='6' />
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='7' />
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='8' />
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='9' />
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='10' />
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='11' />
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='12' />
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='13' />
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='14' />
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='15' />
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='16' />
                  <groupfilter function='member' level='[Calculation_745908739735781376]' member='17' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]</column>
            <column>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_cases:qk]' scope='rows' value='New Cases Registered' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]' />
              <text column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_cases:qk]</rows>
        <cols>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]</cols>
      </table>
      <simple-id uuid='{45DA8818-4B9D-4925-8233-264C81CD46FD}' />
    </worksheet>
    <worksheet name='Tree Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Yu Gothic UI' fontsize='18'>Tree Map Visualisation for Testing Dataset</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data - 2ndCopy (owid-covid-data - 2ndCopy)' name='federated.11nvgln0yx58vn1fatmnt1rraz1b' />
          </datasources>
          <datasource-dependencies datasource='federated.11nvgln0yx58vn1fatmnt1rraz1b'>
            <column caption='Week No' datatype='integer' name='[Calculation_745908739735781376]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='WEEK([date])' />
            </column>
            <column caption='Year' datatype='integer' name='[Calculation_745908739737477124]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='YEAR([date])' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_tests]' derivation='Sum' name='[sum:new_tests:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_tests:qk]' included-values='non-null' />
          <slices>
            <column>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]</column>
            <column>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_tests:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]' />
              <size column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_tests:qk]' />
              <text column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]' />
              <text column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]' />
              <text column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_tests:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AB7A0821-C921-451F-BCA7-ACAF10891A96}' />
    </worksheet>
    <worksheet name='World Map Total Case Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='20'>Covid Case Count Per Million</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data - 2ndCopy (owid-covid-data - 2ndCopy)' name='federated.11nvgln0yx58vn1fatmnt1rraz1b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11nvgln0yx58vn1fatmnt1rraz1b'>
            <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Longitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:total_cases_per_million:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>50000.0</max>
          </filter>
          <slices>
            <column>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Latitude (generated)]</column>
            <column>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Longitude (generated)]</column>
            <column>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:total_cases_per_million:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='50000.0' field='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:total_cases_per_million:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:total_cases_per_million:qk]' />
              <lod column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]' />
              <color column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:total_cases_per_million:qk]' />
              <geometry column='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Latitude (generated)]</rows>
        <cols>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{22A95534-CAD4-432B-8AA0-69972ADE6900}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='DashBoard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='39' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='22' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='15' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='10' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                    <zone h='98000' id='3' type='layout-basic' w='98400' x='800' y='1000'>
                      <zone h='49000' id='1' name='World Map Total Case Count' w='98400' x='800' y='1000'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='49000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='50000'>
                        <zone fixed-size='533' h='49000' id='12' is-fixed='true' param='horz' type='layout-flow' w='98400' x='800' y='50000'>
                          <zone fixed-size='548' h='49000' id='37' is-fixed='true' name='New&amp;Death Cases' w='55600' x='800' y='50000'>
                            <layout-cache minheight='269' type-h='scalable' type-w='cell' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='49000' id='20' name='Line Chart' w='42800' x='56400' y='50000'>
                            <layout-cache minheight='272' minwidth='253' type-h='scalable' type-w='scalable' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='55' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='54' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='1' is-fixed='true' name='World Map Total Case Count' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='37' is-fixed='true' name='New&amp;Death Cases' w='55600' x='800' y='50000'>
                  <layout-cache minheight='269' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='20' is-fixed='true' name='Line Chart' w='42800' x='56400' y='50000'>
                  <layout-cache minheight='272' minwidth='253' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{231DE46F-316A-41CD-889A-FF01821F63F2}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Coronavirus Story</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='133' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone fixed-size='79' h='6535' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='88382' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='10788'>
              <flipboard active-id='1' nav-type='dot' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Corona Story' captured-sheet='DashBoard' id='1'>
                    <currentDeltas>
                      <worksheet name='World Map Total Case Count'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Latitude (generated)]' field-type='quantitative' max='15557914.107675057' min='-10990610.387529189' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Longitude (generated)]' field-type='quantitative' max='39317484.153345808' min='-38884366.212856077' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='3112' id='6' story-point-id='1' type='text' w='26673' x='12697' y='95436'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Yu Gothic UI' fontsize='16'>Current Situation</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='3112' id='7' story-point-id='1' type='text' w='25492' x='64075' y='95228'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Yu Gothic UI' fontsize='16'>Forecasting Till September</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='3112' id='8' story-point-id='1' type='text' w='63780' x='18504' y='6328'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='16'>Current Situation and Prediction of Coronavirus Worldwise</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{1DB264B5-1EE1-4430-BDD4-3D49043150F0}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='World Map Total Case Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:total_cases_per_million:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:total_cases_per_million:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D9077B8C-311D-4AF6-9741-B36D5E9F5322}' />
    </window>
    <window class='worksheet' name='New cases Per Week'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]' type='filter' />
            <card param='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; location (Combined)]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[date &amp; location (Combined)]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:Calculation_745908739735781376:ok]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{308631F1-9CEF-4B45-8933-9313BEA0F06B}' />
    </window>
    <window class='worksheet' name='New&amp;Death Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]' type='filter' />
            <card param='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_deaths:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; location (Combined)]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[date &amp; location (Combined)]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6ED44D64-4B3A-4566-B1A7-59F14C968B9C}' />
    </window>
    <window class='worksheet' name='Stacked bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F90FF159-C5F2-46F6-930F-52ECD0C3A208}' />
    </window>
    <window class='worksheet' name='Line Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[:Measure Names]&#10;[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[:Measure Names]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:Calculation_745908739735781376:ok]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:Forecast Indicator:nk]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[wk:date:ok]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3650E0F6-2E04-4126-8459-D60E4BBCA35C}' />
    </window>
    <window class='worksheet' name='Tree Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[Week No &amp; Year (Combined)]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[none:location:nk]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_deaths:qk]</field>
            <field>[federated.11nvgln0yx58vn1fatmnt1rraz1b].[sum:new_tests:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{967D3A91-623D-4E6F-B915-905BDD63B5F3}' />
    </window>
    <window class='dashboard' name='DashBoard'>
      <viewpoints>
        <viewpoint name='Line Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New&amp;Death Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='World Map Total Case Count'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='16' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{94C5B190-58C2-486C-9BB5-AD13B83C6F46}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{DF061C4D-2AD5-4288-96C7-FB81ABB13FB0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='DashBoard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Line Chart' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='New cases Per Week' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2913Mdd5bn+cm83uPi4sJ770EnUlKpq1QlVamqo31U7O70w2zMTE/MPuz+
      Dx0xLxMx87AR+7a9MS+9HTXTvdUqM1KppRJVkkhRdKKB9/YCuN7bdPtAkTItgkhQBNGF3ydC
      IQLIPPfkzfzmz5zzOz/JMAwDgeCUIj9vBwSC54kQgOBUIwQgONUIAQhONdbn7YBA8GVK2SQ1
      qw+PXCGn2Aj5XQcer6tV1lfX8Dd3EQ64Ucs5soodl56jKHmQqhVC4RCS9NXz1GqBfFUSAhCc
      LCrZHd6bLtIpbVN3/o8J+Q8+fm/+BrfWqxRvz/Jv//KnVHJbvH+jSLN1i2TVTlFx8q9++gaW
      r52X21/k2rpVCEBwsgh2jBG49jfMW4b5C3WD//M//5qaI8RP37jAr375Nu7el2hJz5NtH+BP
      Xv0+nmCQ7bfeZuSlH1CqKLgCnSildykH/ajpdUIDL/HBz/8fbi3uMf6DPyX12TtsxMv8+E9/
      TGx9XowBBCcLSbIy1NVM7+gE6d1NbA39fO+lM6xML9I/NUkhkwKLi9d/9Dp+l4X56fu88PJF
      7lz5kHhZw+JwUVeLkpObcBt+wk2trGxGuPTq63T6daJZiR++8Roei04uuYckAmGCk0YmskDW
      0UW7T+Wjyx9QdTUy3u7l7lKE+pYuGqjRdnYSDwbZ6AYffnKfjt5eGtt7aQu5Wbv7MaXgOE2W
      FNZQL5XINJ/cW2P84ivUItMs75e4ePEMpZpFCEBwunluXSBd15/XRwsEj3huAtA07Xl9tEDw
      CDEIFpxqhAAEpxohAMGpRghAcKoRAhCcaoQABKcaIQDBqUYIQHCqEQIQnGqEAASnGiEAwalG
      CEBwqhECEJxqhAAEpxohAMGpRghAcKoRAhCcaoQABKcaIQDBqUYIQHCqeerKcFfe/zWqpY7R
      s+fYmv6UZF5h6uVX2Lx/k2xZ5cxLF0hFytQ5slTcrXQ3Bb4NvwWCb4WnFICKokg0trfhd2q4
      6nv40SUX129sUd/Zz2S9na1onP3NCPmmFs53B9B1/dF/iqJ8O1chEByRpxOAIXHuxe9QjG+y
      sGND1hS0qgWLw4aiamhqDcliJRBqQq0WUHQDuyxhsVgwDAOL5eslSwWC4+XpKsNpZe7cukOm
      rDF+7gLJtXtE0goXX36RrZlbxIsG51+cIrVXJuSrEa846G4NIQGKomCz2b69KxEIjsBzK40o
      BCA4CYhZIMGpRghAcKoRAhCcaoQABKcaIQDBqUYIQHCqEQIQnGqEAASnGiEAwalGCEBwqhEC
      EJxqhAAEpxohAMGpRghAcKoRAhCcaoQABKcaIQDBqUYIQHCqEQIQnGqeXgCGTjqVQtUNyvk0
      u9EkhmFQzKbYi6Uw0KhUauhqjVKl9i24LBB8ezx1Yaxydp8PP77Nd3/wOivTMzitBiVtjOTW
      Cg6LgiIPUYxXcZLE1TKA22n/NvwWCL4VDhSAYRjouv7oZ0mSkOUvNRq6yupmgqGBDnS9jC/Y
      xfCQixtX9gj1tNMedLC5n2BrcZm6nhEuBtxomvaoMFatJloEwfPlQAGUs7u88/b7bMWyhINO
      3F0v8uevTjz6ezW3x9buPqVcjB65Dso5irEi9gY/+VyRolxAdnjoGJhCrUQpVFV8TisWi0WU
      RRGcCA5RFyjL3//dR/z4jWHevZrgp3/60j87Ihnfwx1oJL2zyEZS5cK5caJrs+zmZc6e6SOT
      qFHn0YmXoDVcJwpjCU4MhyqMtXrvGreXdrnw3R/S2+T/Vj5YCEBwEjjELJDK7P07hJtb2FiN
      PHuPBIJj5BCzQEUyWZXSxiaW4FNPGgkEJ4pDPNFOxs6cJV1Wmbw0+ew9EgiOkUMFwrY312np
      6UHSRD1/we8XhxKAU9aZ/uwms+vRZ+2PQHCsHEIANfZiKUKhJjLb8WfvkUBwjBxCAE4aGtzc
      v3EdT3vzs/dIIDhGDhEHqBGP5nF7rJQqEG74dja5E3EAwUngCbNAKrM33+eX76xy4UILGa2D
      /+mPLh6PZwLBMfAEAcg0tfdz7ryHjo4g57sHj8crgeCYeMIYQKahpRGlmOf29cu8/7t7x+OV
      QHBMHCIQ5qCW36apfwJJdj97jwSCY+QJLUCVe7fuY0g2VucXUS1iBaXg94sntAAOpi6cx+tx
      ki2rWO0yZVXHZRVCEPx+cIgnOc/1T+axS3k+eu8dPr65+ey9EgiOiUOMAdy4bHnm50uEe7qw
      Sc9lX22B4JlwqAUxkZUZspqDQKiJtgaxIEbw+8MhukA53n37XSI7e9y8MvPsPRIIjpFDCMBF
      Y6OX+zdu4O9qffYeCQTHyIECMAyN+Vuf4ui4wL/793+JSyt97QCNpXs3+eTWfaqqTmJnhU/v
      LqAbBtHNRW7eX0I3aqRSBZRynkSm8CyvRSAwzYECyGzPMbsPLfI2/9f//SZtvd1fO0KjuWeM
      /iCs7cVZ38szXF9jejnCdlanK1BjNZJgfz/N0uIydqfz2V2JQHAEDpwFUtUqO/P3yPpVdFVn
      Y2OXzvr+Lw6Q7JSSK8xuZpg41wLFBuo6XCx+tE9DXxB/0El6L8b20gr+7mH8TqsojCU4URw4
      C6TrKpVylYcHWG12HPYvzdxUsly9dY9KuULf1CWya3eJ5lXOv/Qym9M3SZc1zr54nmSkRIOv
      Qkr10tveIOoCCU4Mh5gG1fjgl/8NZ+sIkq2OF8/0fisfLAQgOAkcKhK8tZMmvR9le1OsCRb8
      fnEIAdRx8cVxovt7nLk0/uw9EgiOkUO1ADt7Gh5HmZnp1WfvkUBwjBxCABaiG9O4m3txyCIP
      SPD7xSEE4Oa7P3wVn91JW2fjs/dIIDhGDiGADO++dZnEboL9aPbZeyQQHCOHygUanpqgVo1T
      VdRn75FAcIwcvENMepe5SJnvvPY65UQfd3ek4/JLIDgWDmwBqqUMu7sJdB1UpUQkkjguvwSC
      Y+HASLChKdz6+D0Wd1LIdg8/eOMnNAe+nYQ2EQkWnAQOkQph8PAISfr2ukBCAIKTwCEGwWWu
      vPs+00ubKJr+5MMFgn9BHEIADnoHO5j93c/5f//H9WfvkUBwjByqBXjrH36Bb+BFfnBx6Nl7
      JBAcI4cQgJ2R8UG2528zvbz77D0SCI6RQ237WKspXHrlB8iOumftj0BwrByiBSixvRMjHY2x
      PC+qwgl+vziEAAJMnelheWWViYtjz94jgeAYObALVMzs8NavLlMBHDaV+zMrDLddOCbXBIJn
      z4EtgNvfwo//+Cd0Nfqwexu5MNn/tSMMIquzXPn0NsWqSnRzkU9uz6LqOrtrc1y/M4+qV0kk
      8tSKGeJpURdIcLI4UAD5+DL/5T/+J5aTGuGQj3z+6w+wgsXdwlSnj81oku14mfFmg5mlCPtF
      mb4Gg/XdBLFYmqWlNZxu1zO8FIHAPAd2gdzBTv7q//jf0T7/2RP4+g6RdvzOKqt7Mr09drZK
      IfytLqqf1wXyBp0kH9UFGsLnsIi6QIITxaGqQz8WvcSVj+/SM9CNzx9gYfoudU4wwoNkdjfx
      O1RcLb2UkzUcRhJncz8t9R5RF0hwYjhUHOCg09vbwhQLBVy+ekZHBkkUdLraGii4dVIVic7G
      ekoeDZcjTKEqcokEJ4unawGeAtECCE4CYrMvwanmuQvAMAxUVUUUXBE8D567ANRihDfffI+S
      KiQgOH6e+xhg/d4tym4vHl8rpeQ2gwOtLG4UqCZXSRYtjE/1s3jvPs19E6S3ZskT5KXJNq7d
      uIuqurjw0iCzd2ZxN3RzYWrg+Sta8C+K5/u8GCpzy4tszM8wt7ZN0KVz8846Hl+NmdltVCVP
      Ll+jdeAMHSGZbK7G3sICa+kUkxdfpTVgZ3l+mnRJoVQsIBasCczyXAVg1PL0X/ghf/jHf05f
      yEZ9cxdIBi0N7QwNNmNzevF5vQQDHqxWB06nnc6+HprqAty//hErexkGh0dx2614vF5kUbVF
      YJLn3gU6CuVslOs371PfNcrEQBviuRcclecmgFJJ4c606LMIni/PTQB70SqvvJF8Hh8tEDzi
      X2QXSCD4thCzhoJTjRCA4FQjBCA41QgBCE41QgCCU40QgOBUIwQgONUIAQhONUIAglPNUy6K
      19hYmKFgDTHW18rKzG22UwoXX3qBnbk7RAs6Fy5NktovU+eqkDN8tIX9347nAsG3wFMKQKKp
      tYNSPI+ulikZPl454+D+7BZObwPnOixEIlGqWY2Emmf0TAtfzrx4TlkYAsEjnlIAMi6XA4k8
      Bho2qwOb24VaTGGv92O129HVNLHtDdwtHVhlGV3XMAwDXddRVbHvsOD58pQCqHL3xk2Wo1kc
      ru9QTK5yeUdj+MLLbM/cYntFY+yFcxiKl6Arz/pukr62EBIP3v4iGU7wvHnKbFAD7fN1iJIk
      I2GgGyDLEobxYHdJ2SLxsOSDwYOdJkVlOMFJ4anHABaL5as/P/zXl7dUlb7yP4HgxCCmQQWn
      GiEAwalGCEBwqnnKMYDgXwLlTALdEyK9cZ/VWIWz5y/gd1qefOKXbWSjrO4WCPut7CaLjIwO
      47Sae39m4zvspFRCHp39rMr4yABWk7Vskvtb7KUquC01EjUHFycGTJ3/dUQLcAq4+4tfsaOW
      +N37s7T5y1y7sW7axs1f/4ZcNcbf/uNVlOgqM6sJkxZ0rv76PSqFNX729jSxe7fZypRN2qjy
      /q8/xChv8cHNOJsff8zTllUQLcApYOrHL/Ozv3+TVG6XzxYsXPz+JdM26prrcHWP8ROa0YrL
      yC67SQsSdS1B2obP8SNLjnjkDi6ruVYIbDSGrcwvR3G6guQqTrwmLXwdIYATTq1SRLc4cdrM
      Pixf4Aq1M9m3z05dHeHWTtpD5vdq656Y5LPpeabOn6W2V6VqsgsFEi//5M8AaD4TYKmyiyGZ
      DUHJ9E9MYItW8Niq7DU24jBpQavkuPHZNP66Ova3tkQX6KSz8Nt3+dmbv+T9jz4lU6gcqYz8
      vV/9Eqm7h1xMwVvd5OPb26Zt3Hr7Q5qHe7hx9VPSu7ts72ZMWtC59dtf85v3L3P58gd88M7H
      JCuKSRsVPrl8j5Zgic+WdGozM8RNWti5/xkFSz2fvf0eA+c6RQtw0tFqMhe++yoD7iq3bl+l
      vnOS0Z6wKRvtI928f3uGQHcbHV0etLz5CPzAxQHSRTt/cLabN9/8LcOvmt00XSbc1kK4YZSu
      sJs22YbddKtmp7vby2czUerrAuSkAHUmLTT2dnHtves4OtpZvD4nBHDS6XnpBaQ6N5Ki4g62
      MdTdYNpGqRrgtTfOsz99g0/uJ3jx1SHTNhra+li88gH3CwbhwQkm+xtNWjDw+wNcu/kRqw4L
      uiPEq36zXTGJQEM9PknmO997kcj12xSAoAkLVqcHX52fnsGzDHbZRRfopLN3/waL+2l+8/e/
      wG3d5R/eXjBtY+3aLbJylem7Mc4Nhrh5fdW0jeu/fof+713CqNbRqOxyd9ls58Pg6rsfce77
      P+IHr70OO4tsmp4FqnD35jYvXhrg2sc32Ly7gNmt17en7+NtGUONLbCZjAsBnHRah3qZvXKZ
      9WiU+aUo7Z1m3ncPGP3RJXau38TR3IyuQd9Iu2kbA+dG+Oy31+iY6Cbc1Udjnfm395mXJ7n6
      zv/gn975DVlvE61+p0kbTkbOdKPKQS6MNLKnapj1on1sBJteZfzCi2RW10Rt0JOOrpRZWFzG
      UxcmWOeglJdpbjHb8/0CpVogmijT2tqALB0+CPVwDYcsy1RLWVJFg5Zw3VeTHr/st65TrVS+
      yRKGAZVChorkJOj94hG2Wq3Y7E+aXn1wviRJ5OL7KM4A9T7XoRMtK6kd/unKbUKhJorJiBgD
      nHRWr7zPir0V994iL7zczuW39vnLv3rFpBWDWrlIOlfC43WQ2I1Q1xjEazNx+w2dYrGEz+dD
      Vypsre1TH67jce/wUrHAtcvvfc2ESrmq4XI6KGdjbCdr9PW1P3oIWzu7GDt74YmuFLJpKirY
      jRrbW3sExnoP/SDvLi4S6j7L1m//kdf+w5+dRAFk+fl/fYvh7/+Aoc5GrBbzvTRdT/Df/uZd
      Lv7RG/S01GM5wtYx5eweW/sSrb40v/lkgcGpS0wNtJpK6a6WMmxuRZEsNa68e5cf/i9/RnvI
      Z8qP+tZ6rGk/L50N87vLv6VqGzZ3IUB0+gPeWTU4P9DEp5c/o+c7f3rgw28YBl/fb+rOO//A
      tq2RxnAnzbVdZHcPDk3/YlpWkpAOvFcG059+Qs0bJBBqR47s4B4eNfkAavzuFz9Daxym0W3w
      ye01/s2/+59N2WgZHKCcd3Du3/8VFLaekQAMjZXZu+zlDS68MEYqWiHgqpLT3bQ2PGlRfJli
      pR5XKcK7796ls2+UkcFOTE2YGQV0owUltsx7Mzl6BicY6GkxNeAp5/aZndHYz85y8V/9hA9/
      dpupgVYzXqAU0nxy5Sp9kyOUsmWsJnNnAEJDL/MTw0CSJP7wj/41lYr5ZaTp3Qz1zX243W7q
      6lxkkwXoDDz+BE1HvTL3lV9V7m7SPd6P9dYVbqxFCPdXUVNfxAKkei/WyZ4D/dB06OwfobA9
      z1okTv+Q2d63Ri6n0T7gw20HW7lEGTATk3aFOhkLff6Dr+/ZCKBWyFKy1THZJ7EdiaEWILGf
      ZGjqzCHOttPS0UDv2Hl6RjTisaNkezhp7ggxcnaSIbVGIpU3bcHX0EtH0zRrBS9j1RpDL5if
      OvQ29vCv/9cm7t26glTXQH3AY9oGfGlxkVHh6vtXOPP9V2nwHD4GOvTDP8axuoaiqDT1TFDf
      aH4MMfXCHxDJ5OkaOIvDEcAZOkBA34jE6LmzlDWVjq5uFDw0mbiGB9h54y/+hM3dOJpucOl7
      L5uOBNcqBWqGHa/LDlifzSyQrhm4XA4cLi+6UmZneZqS7MZ+qO6MH0Nb5/KH1ympBmufzWB2
      skySw7z4B93k83mK5RzX37+B2Zij1eFhZGqKP/yLH+GwyOzObpi0AOXkNm++9R6Ks4v/8L99
      j4/f/sy0DU2pkc/nyefzZDM7lJUwIbe5PJz07jaZcpVKpUJ8Y4Zr180nw3127TJz+9t8NL+G
      mk+zFs2atGAwfeM6c/N3+c3VGaKRLQo1s62Zxs7mNuVKhUq1yvW/f9t0JHjjxhX+9u9+zj/9
      9gM299LPpgWwe1wkZ2aJbmj0Tk7SMeQj4MiyuZ+muyX4hH50nt2ohZ9+p4lPbt6jtLGL6V6v
      UeIf//v/x8iZCaDKxkYMs7uRVbJ7/OKtTxga6gXybEdSZr0gubVOoGWUsCXB9EaZyIb51iy+
      cJ0Pt1V6w140dZdYMvTYmZeH/Hz9b1H1LySfWbjPYqGe/m4nhcoeidQ8ldUbj/5eZ6/njY4/
      O9Cm0+2krXWQ+uI6H95Zo2uiw+SVGEiyjeHJYTbnssjVXTT94C7QSjzG31y7+hUbK1ev4O4d
      wm63sL+5wK1fvcmXR1WvDQ7xo+HRA9ywcval73G+z8fC3OyzEYBsc3H+4kUUTcLlstHoNbDI
      zaiHegrreOFSH/ZQF5f6dX4bMZ/whOTlpVe+Q8/IEFYUPFI9ZidcnYEmLr7wAv1DvciUcUjm
      82daR6dIrqToHrnI8sw12ibaTNtoGhpnyl1juK8JXUvjcT65OxcpbqB8SQBGu5cmtUbZpiJ3
      eQh1VNkpbjz6e0V7chs7ef41FEPC3jDGn4e7sDrcJq9EZurll5FkK2fPBchl6/A8oSUrVKtM
      7+1+5Xd6ZxclQ0GqqegXR1jf2/3KC3Ws5avjtP9+5yZ7+S9aq1qpgBa5z6fJB4/+sccBdF3H
      MAw0TfvagnoBwNX1jyjVioc+3max82r/a1/53S82/g5VP3z3ImAP8sP2P/niF5qOOrN56PMB
      JJ8LS2/zo58r5RKzd26bstHQ2ExX/xcLXFYTcf7r9WumbHy/f5DXh77oM7y3NEey+Pjv89gF
      8KBcypMF8NCtg5r7w9h4UnfhSTYeBn9Og42H9+agY55kQ9cfNPNPY0PTNGRZPvDePeneHva7
      OPY4gCRJSJL06CK/CV1TQbKgKVUkix3bY6YPD7JxWJ5k4zD2T4KNhw/E09g4zMN7XH48SQBP
      4rDf53PLBbJaH6c9hRtXrzB77wb3Fte5fesOmmkbX0Ynl80/dhD8eBsGlVKBmqYDOpVy9bG5
      +AfZqFYq6LpOJpM5cND35GtRiMfSBx7xuDeermkYgK5UyeZLjz3/SQ8uQCWfIhJLP/a7ePyD
      a1AplZ448IXHXweAoSkUSxUqhQzp/OPHLgd9n7paJZlIUqmpzy8S/Hh1V1EMH2GPg3KghcTi
      LAp8YyDscTYMo8b2egTJZgUUFud2+e4br3xjwORxNir5GJ/eWafe56Z/vIc7N1d4+btnTV1L
      fn+dO+tx9EKWpo4m5jcCvHSm25SN1M4S99YShOvtzE7v8uqPX6Mp+M/jCQe9LRevfkrjdy+x
      /Mk1PD47tvAowx3/PBZwkI35a1cIn7/AzI1ZWhocbDFKV+M/X5D4eBsGdz/+EEtzC35/Ax2t
      Tbgctm+cEXy8DY1bn3yCy+8kVnBgKae59Pr3vzEd43E2iolt7qwmqKSi1AVdJzEb1MPoeDct
      g2M0e6Cxp9f8LBASO5EIPr8fv99/yPjD1yzIMk63j5HhLlYXF8mVa6ZtaJpGXbiD9qYWuroa
      UWtmoxEQbO1loLMBHYn6cNs3PvxPwuWzE1ldJldz0hwOoKmPa1MP8CPsZ3lmnnypSL6i4XKY
      f3daHX7Gps7QFnSwubJKSTHvhyxJaLrxIJFPx/QKObVaweZyYbO5mDg/8vyyQR9Plk8/iTDe
      6+TeTh69XOGlP7hkrqkyDBSlQqGoEvA72NmO0tbdYSqdwjAMarUixZKE16myuZujv6/DVC6Q
      oWsoWoViQcZtzbOZNBjsbjJzJQBoWol0oki+VMTlraM5bC6Sa+ga+XyKmubCruUpWX00B80t
      JzcMnVR8n5pux6JXsdeFqHObSWc2yGdz6JKB2+OnEI9iC4XNJeQBaq1CNJ4iEPASi8RoHep/
      bELeN3qha2TTe2QrXtpC8klsASwolSxLy9s0tXdiM1TTQSwkCZvdSTWzye8+vondHzSXS8SD
      JtTh8FCILnD15gL1jWHTtU0l2YLd5iaxdZdP72/S3Bx68knfgIyd/a0FdqJpAkGzKQgP/PC6
      vWwt3GZuJ03Qb74VkSSZOr+PzaVpttNlvE6z7bKELxDAYzW49uEHbOdquE1XhQCr3Um9R+bm
      jdtU7R5TDz88+C4C9W1UYrNcvb10ErNBPVx8eYpisYIn4KPRPWk6iGUYVebvzVMzVKyyRDaT
      pbHea0rtaq3A4twKVV3DKhtkMjnqfU5z2aDFNEvLm1RrEjbZIJPJ4282t6ClmImxsrFLVbVg
      s+hksgVcJjNKc/EIa5E4NV1GNhRyxTJhv7lAVnJ3g+1YBh0LRq1MoapQZ6o0isH+5ir76QIW
      qw2lWKCs6XhMiUBje3WZZL6MzWqlkstQo8VUMlylkGRpZZtaTcZmMU5iCyDhcDoppOPE9iKs
      rkceOwv0WAuSg9EzUzQFXfjrm7DJhum3t9XuZezMFPVuGw3hxiNVtnZ4gkycmcRrk2huaUDV
      zVvx1DUyMTGKQ4L29nqqqvlb5g+3MTE6iEWTaWsLomlHyEpt7WZ8qAdJt9LUEsAw3yzT3NXP
      aH8HSC6CIQ+y6c63hY6+YQa7mrDY/Xi9dtMtu9MbYmJqErdForU1dBIFoLC+uEQ2n+Ly5eu4
      vN4jllWvsbG9TSaWZm9r17SIHlBifStCNpFmZ2PvSBagwOpyhEI+z8760Wwo5RSba3uUqkV2
      NqJHspFP7BHZiZEvF9iPHjyd+jjimxvE4mmyuQzJ7OOnUw9iZ26RTKlEOholUzU/KQCwNb9I
      plgiuR0xvSYYACPH6nKEYrGA5a//+q//+khePDNkvP4AslHF5mvG44D6+icl0H0TFpw2mVQ6
      TXPvAKGA5wg2bDgsOol0lq6hIQJec12gB9ixyTUSqQL946P4nOaXgVqsTiS9QiJdYmRyFLfd
      /HvL7nKj1YpkSjpDQ304jrA2we33Ui7kKBt2+ns6sFnMfxv+kI9MPIHuDtLX1nykxUq+Oi/p
      eBxrqJmextAR7okDq1whniyexBZAwma3sLO5SSZdJLWzi/kJyAeU8hns3gbUcuFIBaUezFyk
      8deHKReO9K4BdLLpNOHmMNn00WwYukomlaWtI0wydfg8oa94odRIJQu0tgXJ5r9pre6TUasV
      MpkKjWEvpfLR3t61Uol8Beq8Fqra0drlaqlAWXPgtqhHbNl1sqkMza0NJ1EAADLdff3YyeNs
      aj9CHACgxl4sQSGVJbEXNz+TBECF3WiKfCpLdM9sMdiHFInspCjm88T2jlbKValk2N/PUCwV
      iO8frftSyMRJJXMUinlSR1ggBJDe3SWXL5LNZsgUjyai6OomZbVGJp6gcIQ4AMDe2hblWpX0
      XpQjdcSMPJGdFIVi4STOAj1AU2s461pwW9QHe4uZONcwFPZ34rR09JGIZ2nsNL/0TVOrRPfS
      dPf1k0oVaevvN93UKtUSsXie4alhMoUqY5O9Ji1AtZwnkdEYmRogX9KZmOw0baNcyFDUHAxO
      9FKt2hgaMlvUCgrZJLq3nr4BFV320WF6v2eDXDKOo7WdDimG7K8nbLrArk46FsPb0UPrfhx7
      XSNmvVCqRWLxEiNnh8kWaye1BdDZ3twilymQiOwdoQskY3fYH0QLJZ14NH6EmSQZu8P6eW6M
      SjSaMN2Nki0W7Dbrg8XiWo1ozPyiGovFis1qRbZaMJQK0bjZmpxgtdqwWC1YbDJKIUcyY74b
      ZbXakGULFrtMJZ0iWzLfAljtdiTZgtUmUYzFKZiOSEvY7HZkWcZilcju7ZteLSjLFuw2C/Ln
      9+QECsDAMGQGRsfwOysEu/qP0AVSWJqZJZkrYXf6GRjsMn2hmlpiYXaBbLGK0ynC8DgAAArm
      SURBVBtioNf8YpZaKcv83BLFqoq7rpm+TnM1PQEquQTzi6uUFQ1/QzvdR6gJVEztsbC8RU0z
      aGjroTVkvqh4JrrN8kYETZdo7umnwWs2BAXxnTXWtvcxJCudQ4P4TdcG1YmsL7O1lwTZRt/4
      sOlAWLWUYW5umVJNwxNsOYmzQCrLMzOkyzout5vmlmacdqv5eXybDQs6iq5Tq+rUBX2mbEif
      v23QFVRdo6ZI1JmcSZKQsDsdaLUquqGh6DYCPpO1zCQZh8OOWquCoaJJLnxmF5N/bqNarWKo
      KpLDjcfkbJQkW3DYbZQrVQxFweb14TSZxiBbrDhsVkrVKmq5ijsYNJ2nJVttOKwy5ZpCtVAh
      0Bgy172VJBwOB2qtimFoJ7EFsNLR20dDwEE+k2FleRXzhUAM8pkU+YqKWikjO+ymBWRgkE3F
      KSk6tXIFm9Nsf/Xz/JlYDMWAcqmC4whToIaukYjF0IBisYrTdQQbmkosHkOSoFhRcNjND/00
      pUosnsQiGZRqGrYjpDGo1RKxZBoLOlVDMr09EoBSLhBP55E1FU22mg6Eoesk4zFUA0qlyklM
      hqvyu7fexdXSQ3NjiNbmpscuiHkchqGhqByh/PYX6LqGpnOkG/3IhqaiIx+puNdDNFUB2Xqk
      +fKHqIqCbLXxFCZQFAXLU9kwUBQVq9XG0de5PL0NTVMBGcvn9+QECsBAU1Vy6RjzswsU8fPq
      qy+Yzgd6gEqhoOI9Qn/1kTe6Qqmi43EfbTIWHrw9a5qM6wgtwEOUShndYsfxFKKulorITje2
      p1BCpVDA6vU+1fRhuVDA7vWaf3s/wqBUKOH0eo7chVFrVVTjRGaDqmwuLxLL61x45VV+eOSH
      HyDPzP2Np/OmlmRhfvfJBx5AIb3L+vbTbeeW3F5nN320INhDdufnSZmuxfNVNu7PHC394Eus
      3Ddf6+mraCzenzNd6+nL5BM7bO5mTmIL8BCdclnB5TL/5jUMg8j6IpmySrVUpbVviJZ6k/nv
      usbGyiLFmkalrNAzPErIZ64lMbQay4tL1DSNStVgcHwcv9Pcu9NQK8zPL6HpOjVNZnRyApfV
      3BvcUIpMz65gGDqG1cXI6BAOk2kMtVKaheVtdE3F4g4wPNhruiUpZWKsbEXRlRr2QJjhvg5T
      FarhwVarm/sZtFoVd6iVoe4WU+cbWpWlxWUUVaNSO5HZoA8pcfezpaOdauRZ2cwzOjLKmakh
      lmfmTA+kK/ko0ZzE6OgYZ8Y7mb6/aDoOkNldp2ipY3RsgjPDDdy5a35jiv2lWaRQJ2MTk4z1
      eLh9b8u0jY07t/D1jjIxNUV7QGNhNWbaxuq9e4T7R5k8cwaflmErljNpQWdxZp72wVEmz55F
      T2wTL5mN8CjMza3TPzzC1NmzZNbMb5CR3F6l4ggxOj7B1HD9yYwEp6I7RKIxJKtOPFsmHDA7
      deihsU7n/vQMhlqlsdNkcV3A4anHLW0zPTODVq3Q2dNv0gL4wq0Y9+eYmU1TK5foGzC7rxaE
      urrZnlliNumiUiwyOPrN65IPomVoiLtzdyl4nJTLFQbG603baOvvZX72LgmXnVJFZqzfbCxB
      oqOnjZWZezhtMmWbn0HTYyIrXR0h5u5PY7cYSPUtmC3PVdfUxub0AjOlBLXSiUyGKzE7H8Ej
      Q6i1ncU7nx0pGU43JByeABNnz2AtF01Hgg3DwJAsuHwhzlyYRMmafeMBugZWG766Rs69ME7x
      CVUdvhFNQ7LZqQu3ce6FETJ75qPJhqYi2eyEW7uYGOkmlzR/LbqqIVvttHT1M9wZJl8034vX
      VA2LxUbX4Bg99R4KivnxiKoZ2OwOekcnaXNImB0VGboOVhv+YBPnLo6fRAE48Ll1EkWFUDBI
      Q0PQvJNGjlTeQZtfYnUnSiKaMJ0MVy0mqElBQrYyG/sJYlHzD142voe9rg2nmmY3lSIWNZ/G
      ENvcor6zDz23TzybIR43//DuLKzSPjZGPrpJMpshdYRc/sjqFj3jI8Q2V0ml0uSKVZMWDCJb
      UQbHB9laWiQZSxxhUbxCZDfLwEAH68srJPaipl+O6f0IroZObLUk++n0SRSAhakLFzl7/gL1
      XjutrS3m872lAO1tXtwN7TTYFGSPueWQAE5vI6E6G3WtPbjVIq46c8sQAeqa23FbdJo6+zBy
      OXyNZlO3oLm/F7lSo723j1IiQ7DZ/JrgrolhlHSJ3v5+8qkcgSNUluga7UfJ1xgc6CGXL+Hz
      ml8T3DXQTa1iMNjfTlHRcJmMJION7p4WdJz0dYQoy1bTaTKh9k6caLR09qOmsydxDKCwtbaJ
      YbUCBiszq7z0R69j7pYZVPJJ5ucqoNUINLYcYc7ZoJCOMl/Ko1UrhFrMZ3IahkEmHmG+kEIp
      lwj3dpu3oRsk9jYo5ZxUi1Xah8333w1dZ39nhWLaQaUGLfXmxWxoGjtby6ScNhSLg4DH/G7z
      hlpjc2UJp10Gjw/fEWIahlpmeXEeuwWswZDpMYChG6Rj25QLCWql0klsAWSi0SjBhgYaGhpM
      56wAYBSJpiXGx8cYGxskurFpegxQLSYp6l7GxsaYGO1mY9X87Es+vofka2Z0bIyJkVaWF3dM
      20hsruNt62dsdIyxgXoWl8wvq9xdWKJpeJKx0TG6Gx1sbJvvzm0vr9E+MsHY2CgNTo39pNn5
      F4Ot9R16R8cZGxvDUc2SNr1TvMrGVoKR8XHGxsfREhHT6wEy0R2swTbGRseYGG4+mXGAUj5D
      Jl/EwII/EMDrOfwugPDgzbu7vkAsVwNdo7l7kOZ6c2uLDV1jc3meTFlD13U6B0YImawKYWgK
      ywtzlFVQVYOBsSPGAWbnUCQLqioxOjmOy2RqiK6UmL4/BzYbOnZGx4aPEAfIMDe/imS1Itk8
      jAz3mYwDGJSzCRZWt5FlCasnxHB/BxZTcQCDfHKX5c0YsmTgDLYw1G2ui2xoNZbm5qgYEorC
      SewCVbh1/S7DZ6ew6hU+u3mPl1990XQ0WDUkGpraaG8Osh+JodebDL0bOrrFRmNbO61hD5Gd
      FJgNhOkqks1JS0srjfU2dnYy+NvN7fSuqwqy00tHSztBL+zuZWhrM9cN0pUqNk+A9s5OnFKF
      TLpAY4O5bpCmKDi8ATp7uqGUJV+sUG8ys1VRFFzeOnr6eqgkopQUDZ/JxLyaouELhOju6SS3
      u0MFTO0VbGgqksNFa7iNcPAZbZH0dFhxOXT2dnfZ3d1DdrmPMAuUYWOrhK2SYDuZZXNly3QX
      qJzfJ54BLb3DXjbP2krErBek9zYp4aYQ3SBZzLG+Yr77sreyBL564ttr5MoZNtbNbgoEG/em
      cbc0s7W6Qj6XJLJvfjZqbXqOQEuY1cUVsvF94hmznQ+DlbkVGpqDLM4vk9jeJmu6KoTC0sI2
      oXonSyub7K2sm+4CJXfWqVp8ZPfXSZdyJ1EAFrp6+wgGQwyMTTLS1WR+QbvkIxi0Eu4eQsru
      UkY2PZPkcAdxuyTa+kco72+gm56xAH+oASsG3QODJLc2kY+QUNfQ3oRR1env72FnbQu7yVYI
      oKWvlVrBYLivjfWNXeymlyJCc3czatXGUHcDG5E4dtO1QSWa2howcNPX5mcnkTtClqyNcKMf
      m7uetjqZaL5iugsTCIeRDYPe/gFiGxsncQxQ4HfvzzDcH6LiaCC5MMvwq6+YnAV6uMGGhCR9
      /m9JMr8m4BnYOErN+4fnHWbTkMdYeLS7+u+djSPek4ef+/8Dy2DlCLes+pYAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='New&amp;Death Cases' width='192'>
      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
      /3KxP9cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Stacked bar' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      JiVxANGhAQxyuQj0gYD4oWTHtzPvqRe5e+4NX2wHmPvAPP76+4U8uOgFsrOymDHhPO574FFm
      5v+KlDQX/g6Ye88tPD1vHv3OyyUjOYnYSCfJKS68HU183tSKO8OFf2AMIweFkzfjGuKTBp9x
      jtIHxrD4X1bhTkni8JFqgkPDiY7ovamxX8b5XDkph1TXcK6YMpGUSH9mX53L/ffPI++62Qxy
      uQjyhdjEAaRmjiW27TP+8Jd3GNAvmmmXjyHBdRFJyQOYMuF8hqa7OX6kGod/IHFxMX37Voja
      mmri4mLO9jKkD+vTnwFaWjugtuHbB4p8gz59BRD5ofr2ZwCRH0gBiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpv0neGX9oT57zFcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Tree Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='World Map Total Case Count' width='192'>
      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
      WcYHeiiY4AQ+zvjQ9CzLb/0CUzdo37Kd2vbNDKsOOhoaqIxEmJmZ4cPXfs4juUkq7SWnR8Es
      MZTfKtjm1Tmwfz/f+vZ31tWuQCBIVX0rD4cHcX4CbRsSUBSqq2puuQ8uEbymaaurgGEYKIqC
      xWLB7XbfHdEHSCaTdL/2KqGpCRxSMqIJbiTxSQkTFgcbtmxnfGyM6NHX2G41uFKkFkJQpkIi
      IwlcPHUn5BXI+H5GpzYRrH+ASvkeQXeR25hPPzfcNQ/OYg7ejdl46Ctfp23TFvL5PD3ZAudE
      FRWFJG1f+n1SqRS2s/vJZ5IUi0WmJidIJOIEggHsdjuNjY1kn3iGF3/6z/xeZRqfBr+OOcgV
      dJ6tLOJS4czZs3z5d57Ds47IUIvFQlPbFkgMfuKKMR83QXFitd1+ShOn04nNZiObzWKaJhaL
      5e4pvsDYyAj/9P3vQzJJQNUQSLrcCq5rqpMSzllcVD7zPAXD4Pgr/8gX/UvcSJ90aKWsF1ci
      5BV4iz2k8udXGeM3EevSAW52sKSEggSLr4LOLzyL3V7KKtfS3klKceDruA+ry00+k6Lj4S9R
      29SKqqosz0/T1rlxNcpTSklFRRif18PkwHl8FkmltUifLKc3aydfKLLh/kfZ0NG5bjnaHwjw
      wZFemgPpG76XlJKZuIKv9Vmamtc2q64Hl5ReVVWx2Wyr/XA3iF9KyeTEBC/+7GdUTk9xv15g
      g2EwJ6DVrlylLKZMOOEu4/4/+0t8ZeW8/A9/zRfLEnjWCGGqdAjOTRTxlWtYLZe9/JoqcNq4
      bUX088RdWbPm8/C+bCL80FevO9Np645dVNc3MfzG91k4/DqmrlMslvK5OLxB+s+cZHpqkvjK
      CocPHSSbzdKxdSfLjQ9yOrgLTQi+4l2ks70d7/YnkYibkqOdTif1G3aSXGPzUDoPE+Zmtu/Y
      dTtd8JlCSsnAwAB//93vooyP0ShNAlKiSokC5OWV98KkVKh57Ckqq6rQiwX2lBUo+5TFzpB3
      zpF1L0HjCrPcWriZbAwFEw5lgzz6ja+tpqm7FqqqYmu7n6YNnXj9fj56+w30TAJV1dg88yET
      /W8zIpxUKRlODB9ly9f/nK9+7esADPZ0MXr0Q3Ij52n54jeorr55OX3Ttt288bOz3B+exO+6
      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
    </thumbnail>
  </thumbnails>
</workbook>
